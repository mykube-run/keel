syntax = "proto3";
package pb;
option go_package = "github.com/mykube-run/keel/pkg/pb";

import "protoc-gen-openapiv2/options/annotations.proto";

enum Code {
  Ok = 0;
  PermissionDenied = 1;
  InvalidRequestParameters = 2;
  ResourceAlreadyExists = 3;
  TenantNotExist = 4;
  TaskNotExist = 5;
  TenantQuotaExceeded = 6;
  TaskFinished = 7;
  TaskNotRunning = 8;
  TaskUnableToTerminate = 9;
  TaskNotFound = 10;
}

message Response {
  Code code = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Response code"
  }];
  string message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Response message"
  }];
}

message ResourceQuota {
  int64 concurrency = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Task concurrency quota"
  }];
  int64 cpu = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "CPU quota in cores"
  }];
  int64 custom = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Custom resource quota"
  }];
  int64 gpu = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "GPU quota in cores"
  }];
  int64 memory = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Memory quota in MB"
  }];
  int64 storage = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Storage quota in MB"
  }];
  float peak = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Maximum ratio of these quotas, ranged from 0 to 1.0 (or higher)"
  }];
}
